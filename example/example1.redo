system {
    // Define the time model (discrete or dense)
    time_model.set(discrete);
    // Define the event set
    events.set(arrival, completion);    
    resource {
        p1 := processor( ncores = 4 );
    }
    workload {
        // Define periodic tasks
        // All deadlines are relative to the earliest arrival of the task
        t1 := task( jitter= 10, period= 20, cost = I[1,8], deadline = 20, priority =5, processor = p1 );
        t2 := task( jitter= 20, period= 30, cost = I[3,5], deadline = 30, processor = p1 );
    }
    scheduler {
        q := ready_queue();
        time := current_time();
        if (time > 10) {
            q.sort(deadline);
        } else {
            return nothing();
        }
        return q.back();
    }
}
